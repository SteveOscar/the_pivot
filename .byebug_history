exit
number_to_currency(last.subtotal(Stache.first))
first.subtotal(Stache.first)
last.subtotal(Stache.first)
first.quantity(Stache.first)
last.quantity(Stache.first)
last.staches.first.quantity(stache)
last.orders.first.quantity(stache)
last.staches
first.staches
last = Order.last
first = Order.first
Order.all
exit
next
page.has_content?(order.subtotal(stache))
next
page.has_content?(order.subtotal(stache))
stache
next
page.has_content?(order.subtotal(stache))
next
stache
page.has_content?(order.subtotal(stache))
next
page.has_content?(order.subtotal(stache))
exit
order.quantity(stache)
order.subtotal(stache)
page.has_content?(order.subtotal(stache))
next
page.has_content?(order.subtotal(stache))
next
page.has_content?(order.subtotal(stache))
next
page.has_content?(order.subtotal(stache))
next
page.has_content?(order.subtotal(stache))
exit
page.has_content?(order.subtotal(stache))
order.subtotal(stache)
order.quantity(stache)
stache.quantity
15.99*5
stache
exit
order.subtotal(stache)
exit
page.has_content?("$#{order.subtotal(stache)}")
order.subtotal(stache)
stache.name
next
order.subtotal(stache)
page.has_content?("$#{order.subtotal(stache)}")
next
page.has_content?("$#{order.subtotal(stache)}")
exit
stache
next
page.has_content?("$#{order.subtotal(stache)}")
order.staches
next
page.has_content?("$#{order.subtotal(stache)}")
 assert page.has_content?("$#{order.subtotal(stache)}")
exit
order.subtotal(stache)
order.quantity(stache)
stache
exit
order.total
exit
Order.order_status_count
@orders.order_status_count
exit
Order.group(:status).count
exit
Order.update(params[:order_id], status: "paid")
params
exit
params
exit
params
exit
exig
params
